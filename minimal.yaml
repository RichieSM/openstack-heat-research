heat_template_version: 2013-05-23

description: |
  Sample Heat template that creates a server, injects a simple
  BASH script through cloud-init that installs Chef-client and
  joins a Chef Server.

parameter_groups:

- label: Server Parameters
  parameters:
  - flavor
  - image
  - name

- label: Chef Parameters
  parameters:
  - chef_encrypted_data_bag_secret
  - chef_environment
  - chef_organization
  - chef_role
  - chef_runlist
  - chef_server_url
  - chef_validation_key
  - chef_version

parameters:

  image:
    label: Image
    description: |
      Optional: Server image used for the server created
      as a part of this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 5.11
      - CentOS 6.5
      - CentOS 6.5 (PVHVM)
      - CentOS 7 (PVHVM)
      - Debian 6.06 (Squeeze)
      - Debian 7 (Wheezy) (PVHVM)
      - Red Hat Enterprise Linux 5.11
      - Red Hat Enterprise Linux 6.5
      - Red Hat Enterprise Linux 6.5 (PVHVM)
      - Ubuntu 10.04 LTS (Lucid Lynx)
      - Ubuntu 12.04 LTS (Precise Pangolin)
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Flavor
    description: |
      Optional: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 1 GB Performance
    constraints:
    - allowed_values:
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 60 GB I/O v1
      - 90 GB I/O v1
      - 120 GB I/O v1
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 60 GB Performance
      - 90 GB Performance
      - 120 GB Performance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  name:
    label: Name
    description: |
      Optional: Cloud Server's base name
    type: string
    default: server
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z0-9]([a-zA-Z0-9._-])*$"
      description: |
        Must begin with a letter or number and be alphanumeric or '-' and '.'

  chef_encrypted_data_bag_secret:
    label: Encrypted data bag secret
    description: |
      Optional: encrypted data bag secret key
    type: string
    default: ''

  chef_environment:
    label: Environment
    description: |
      Optional: Chef Environment
    type: string
    default: _default

  chef_organization:
    label: Organization
    description: |
      Required: Chef organization
    type: string
    default:

  chef_role:
    label: Role
    description: |
      Optional: Chef Role.
    type: string
    default: _default

  chef_runlist:
    label: Runlist
    description: |
      Optional: Chef Runlist. Will take precedence over the Chef Role
    type: string
    default: ''

  chef_server_url:
    label: server URL
    description: |
       Custom Chef Server URL. Defaults to 'null'.
       Chef Inc.'s "Hosted Chef" URL will be infered from the Organization.
    type: string
    default: ''

  chef_validation_key:
    label: validation key
    description: |
      Required: chef-client will attempt to use the private key assigned to the
      chef-validator, located in /etc/chef/validation.pem. If, for any reason,
      the chef-validator is unable to make an authenticated request to the
      Chef server, the initial chef-client run will fail.
    type: string
    default:

  chef_version:
    label: version
    description: |
      Version of Chef Client to use. Defaults to the latest release.
    type: string
    default: latest

  ssh_keyname:
    type: string

resources:

  server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keyname }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      user_data:
        str_replace:
          template: |
            #!/bin/bash

            # Exit script if any command fails
            set -e
            set -o pipefail

            LOGFILE="/var/log/cloud-init-chef-bootstrap.setup.$$"
            echo "$(date) - Starting Chef Bootstrap" >> $LOGFILE

            # Debug log
            echo "$(date) - chef_environment parameter: %chef_environment%" >> $LOGFILE
            echo "$(date) - chef_organization parameter: %chef_organization%" >> $LOGFILE
            echo "$(date) - chef_role parameter: %chef_role%" >> $LOGFILE
            echo "$(date) - chef_runlist parameter: %chef_runlist%" >> $LOGFILE

            # Infer the Chef Server's URL if none was passed
            CHEF_SERVER_URL='%chef_server_url%'
            if [ -z "$CHEF_SERVER_URL" ]; then
              echo "$(date) - chef_server_url is empty, using https://api.opscode.com" >> $LOGFILE
              CHEF_SERVER_URL='https://api.opscode.com/organizations/%chef_organization%'
            else
              echo "$(date) - chef_server_url parameter: $CHEF_SERVER_URL" >> $LOGFILE
              CHEF_SERVER_URL='%chef_server_url%'
            fi

            # Debug log
            echo "$(date) - chef_version parameter: %chef_version%" >> $LOGFILEs

          params:
            "%chef_encrypted_data_bag_secret%": { get_param: chef_encrypted_data_bag_secret}
            "%chef_environment%": { get_param: chef_environment}
            "%chef_organization%": { get_param: chef_organization}
            "%chef_role%": { get_param: chef_role}
            "%chef_runlist%": { get_param: chef_runlist}
            "%chef_server_url%": { get_param: chef_server_url}
            "%chef_validation_key%": { get_param: chef_validation_key }
            "%chef_version%": { get_param: chef_version}
